code-input {
    display: block;
    overflow-y: auto;
    overflow-x: auto;
    position: relative;
    top: 0;
    left: 0;
    margin: 8px;
    --padding: 2em;
    height: 250px;
    font-size: inherit;
    font-family: monospace;
    line-height: 1.5;
    tab-size: 2;
    caret-color: #a9a9a9;
    white-space: pre;
    padding: 0 !important;
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 100%;
    border-radius: 10px;
}

code-input:not(.code-input_loaded) {
    padding: var(--padding, 16px) !important
}

code-input textarea,
code-input.code-input_pre-element-styled pre,
code-input:not(.code-input_pre-element-styled) pre code {
    margin: 0 !important;
    padding: var(--padding, 16px) !important;
    border: 0;
    min-width: calc(100% - var(--padding) * 2);
    min-height: calc(100% - var(--padding) * 2);
    overflow: hidden;
    resize: none;
    grid-row: 1;
    grid-column: 1;
    display: block
}

code-input.code-input_pre-element-styled pre,
code-input:not(.code-input_pre-element-styled) pre code {
    height: max-content;
    width: max-content
}

code-input.code-input_pre-element-styled pre code,
code-input:not(.code-input_pre-element-styled) pre {
    margin: 0 !important;
    padding: 0 !important;
    width: 100%;
    height: 100%
}

code-input pre,
code-input pre *,
code-input textarea {
    font-size: inherit !important;
    font-family: inherit !important;
    line-height: inherit !important;
    tab-size: inherit !important
}

code-input pre,
code-input textarea {
    grid-column: 1;
    grid-row: 1
}

code-input textarea {
    z-index: 1
}

code-input pre {
    z-index: 0
}

code-input textarea {
    color: transparent;
    background: 0 0;
    caret-color: inherit !important
}

code-input textarea::placeholder {
    color: #d3d3d3
}

code-input pre,
code-input textarea {
    white-space: inherit;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal
}

code-input textarea {
    resize: none;
    outline: 0 !important
}

code-input:has(textarea:focus):not(.code-input_mouse-focused) {
    outline: 2px solid #000
}

code-input:not(.code-input_registered) {
    overflow: hidden;
    display: block;
    box-sizing: border-box
}

code-input:not(.code-input_registered)::after {
    content: "Use codeInput.registerTemplate to set up.";
    display: block;
    position: absolute;
    bottom: var(--padding);
    left: var(--padding);
    width: calc(100% - 2 * var(--padding));
    border-top: 1px solid grey;
    outline: var(--padding) solid #fff;
    background-color: #fff
}

code-input:not(.code-input_loaded) pre,
code-input:not(.code-input_loaded) textarea {
    opacity: 0
}

code-input .code-input_dialog-container {
    z-index: 2;
    position: sticky;
    grid-row: 1;
    grid-column: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 0;
    text-align: left
}

code-input .code-input_dialog-container .code-input_keyboard-navigation-instructions {
    top: 0;
    right: 0;
    display: block;
    position: absolute;
    background-color: #000;
    color: #fff;
    padding: 2px;
    padding-left: 10px;
    text-wrap: pretty;
    overflow: hidden;
    text-overflow: ellipsis;
    width: calc(100% - 12px);
    max-height: 3em
}

code-input .code-input_dialog-container .code-input_keyboard-navigation-instructions:empty,
code-input.code-input_mouse-focused .code-input_dialog-container .code-input_keyboard-navigation-instructions,
code-input:not(:has(textarea:focus)) .code-input_dialog-container .code-input_keyboard-navigation-instructions {
    display: none
}

code-input:not(:has(.code-input_keyboard-navigation-instructions:empty)):has(textarea:focus):not(.code-input_mouse-focused) textarea,
code-input:not(:has(.code-input_keyboard-navigation-instructions:empty)):has(textarea:focus):not(.code-input_mouse-focused).code-input_pre-element-styled pre,
code-input:not(:has(.code-input_keyboard-navigation-instructions:empty)):has(textarea:focus):not(.code-input_mouse-focused):not(.code-input_pre-element-styled) pre code {
    padding-top: calc(var(--padding) + 3em) !important
}

code-input.line-numbers textarea,
code-input.line-numbers.code-input_pre-element-styled pre,
.line-numbers code-input textarea,
.line-numbers code-input.code-input_pre-element-styled pre {
    padding-left: max(3.8em, var(--padding, 16px)) !important;
}

code-input.line-numbers,
.line-numbers code-input {
    grid-template-columns: calc(100% - max(0em, calc(3.8em - var(--padding, 16px))));
}

pre[class*=language-].line-numbers {
    position: relative;
    padding-left: 3.8em;
    counter-reset: linenumber
}

pre[class*=language-].line-numbers>code {
    position: relative;
    white-space: inherit
}

.line-numbers .line-numbers-rows {
    position: absolute;
    pointer-events: none;
    top: 0;
    font-size: 100%;
    left: -4em;
    top: -2px;
    width: 3em;
    letter-spacing: -1px;
    border-right: 1px solid #999;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.line-numbers-rows>span {
    display: block;
    counter-increment: linenumber
}

.line-numbers-rows>span:before {
    content: counter(linenumber);
    color: #999;
    display: block;
    padding-right: .8em;
    text-align: right;
}

pre[class*="language-"],
code[class*="language-"] {
    color: #d4d4d4;
    font-size: 13px;
    text-shadow: none;
    font-family: Menlo, Monaco, Consolas, "Andale Mono", "Ubuntu Mono", "Courier New", monospace;
    direction: ltr;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    line-height: 1.5;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
}

pre[class*="language-"]::selection,
code[class*="language-"]::selection,
pre[class*="language-"] *::selection,
code[class*="language-"] *::selection {
    text-shadow: none;
    background: #264F78;
}

@media print {

    pre[class*="language-"],
    code[class*="language-"] {
        text-shadow: none;
    }
}

pre[class*="language-"] {
    padding: 1em;
    margin: .5em 0;
    overflow: auto;
    background: #1e1e1e;
}

:not(pre)>code[class*="language-"] {
    padding: .1em .3em;
    border-radius: .3em;
    color: #db4c69;
    background: #1e1e1e;
}

.namespace {
    opacity: .7;
}

.token.doctype .token.doctype-tag {
    color: #569CD6;
}

.token.doctype .token.name {
    color: #9cdcfe;
}

.token.comment,
.token.prolog {
    color: #6a9955;
}

.token.punctuation,
.language-html .language-css .token.punctuation,
.language-html .language-javascript .token.punctuation {
    color: #d4d4d4;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.inserted,
.token.unit {
    color: #b5cea8;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.deleted {
    color: #ce9178;
}

.language-css .token.string.url {
    text-decoration: underline;
}

.token.operator,
.token.entity {
    color: #d4d4d4;
}

.token.operator.arrow {
    color: #569CD6;
}

.token.atrule {
    color: #ce9178;
}

.token.atrule .token.rule {
    color: #c586c0;
}

.token.atrule .token.url {
    color: #9cdcfe;
}

.token.atrule .token.url .token.function {
    color: #dcdcaa;
}

.token.atrule .token.url .token.punctuation {
    color: #d4d4d4;
}

.token.keyword {
    color: #569CD6;
}

.token.keyword.module,
.token.keyword.control-flow {
    color: #c586c0;
}

.token.function,
.token.function .token.maybe-class-name {
    color: #dcdcaa;
}

.token.regex {
    color: #d16969;
}

.token.important {
    color: #569cd6;
}

.token.italic {
    font-style: italic;
}

.token.constant {
    color: #9cdcfe;
}

.token.class-name,
.token.maybe-class-name {
    color: #4ec9b0;
}

.token.console {
    color: #9cdcfe;
}

.token.parameter {
    color: #9cdcfe;
}

.token.interpolation {
    color: #9cdcfe;
}

.token.punctuation.interpolation-punctuation {
    color: #569cd6;
}

.token.boolean {
    color: #569cd6;
}

.token.property,
.token.variable,
.token.imports .token.maybe-class-name,
.token.exports .token.maybe-class-name {
    color: #9cdcfe;
}

.token.selector {
    color: #d7ba7d;
}

.token.escape {
    color: #d7ba7d;
}

.token.tag {
    color: #569cd6;
}

.token.tag .token.punctuation {
    color: #808080;
}

.token.cdata {
    color: #808080;
}

.token.attr-name {
    color: #9cdcfe;
}

.token.attr-value,
.token.attr-value .token.punctuation {
    color: #ce9178;
}

.token.attr-value .token.punctuation.attr-equals {
    color: #d4d4d4;
}

.token.entity {
    color: #569cd6;
}

.token.namespace {
    color: #4ec9b0;
}

pre[class*="language-javascript"],
code[class*="language-javascript"],
pre[class*="language-jsx"],
code[class*="language-jsx"],
pre[class*="language-typescript"],
code[class*="language-typescript"],
pre[class*="language-tsx"],
code[class*="language-tsx"] {
    color: #9cdcfe;
}

pre[class*="language-css"],
code[class*="language-css"] {
    color: #ce9178;
}

pre[class*="language-html"],
code[class*="language-html"] {
    color: #d4d4d4;
}

.language-regex .token.anchor {
    color: #dcdcaa;
}

.language-html .token.punctuation {
    color: #808080;
}

pre[class*="language-"]>code[class*="language-"] {
    position: relative;
    z-index: 1;
}

.line-highlight.line-highlight {
    background: #f7ebc6;
    box-shadow: inset 5px 0 0 #f7d87c;
    z-index: 0;
}